{
	"info": {
		"_postman_id": "bb8244e8-1352-4a70-9efa-f627709e7731",
		"name": "Tool Rental API Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status is UP\", () => {",
							"const response = pm.response.json();",
							"pm.expect(response.status).to.eql(\"UP\");",
							"}); ",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"Base URL\",\"https://simple-tool-rental-api.glitch.me\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base URL}}/status",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "All Tools",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"",
							"const response = pm.response.json();",
							"const tools = response.filter((tool) => tool.inStock === true);",
							"const tool = tools[0];",
							"if(tool)",
							"{",
							"    pm.environment.set(\"toolId\",tool.id);",
							"}",
							"pm.test(\"Tool found!!\",() => {",
							"    pm.expect(tool).to.be.an('object');",
							"    pm.expect(tool.inStock).to.eql(true);",
							"    pm.expect(tool.category).to.eql(pm.environment.get(\"category\"));",
							"    pm.expect(tool.inStock).to.be.true;",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"category\",\"plumbing\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base URL}}/tools?category={{category}}",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"tools"
					],
					"query": [
						{
							"key": "category",
							"value": "{{category}}"
						},
						{
							"key": "results",
							"value": "jhvkj",
							"disabled": true
						},
						{
							"key": "available",
							"value": "false",
							"disabled": true
						},
						{
							"key": "id",
							"value": "1643",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Tool",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"id of tool response matches the request\", () => {",
							"   const response = pm.response.json();",
							"   console.log(response.id);",
							"   pm.expect(response.id).to.eql(pm.environment.get(\"toolId\"));",
							"});",
							"",
							"pm.test(\"Current stock is greater than 0\", () => {",
							" const response = pm.response.json();",
							"pm.expect(response[\"current-stock\"]).to.be.greaterThan(2);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base URL}}/tools/:toolId",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"tools",
						":toolId"
					],
					"variable": [
						{
							"key": "toolId",
							"value": "{{toolId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const response = pm.response.json();",
							"console.log(response.orderId);",
							"pm.environment.set(\"orderId\",response.orderId)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{apitoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n \"toolId\": {{toolId}},\n \"customerName\": \"{{$randomFullName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}/orders",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"orders"
					],
					"query": [
						{
							"key": "toolId",
							"value": "{{toolId}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{apitoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base URL}}/orders",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{apitoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base URL}}/orders/:orderId",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"query": [
						{
							"key": "invoice",
							"value": "true",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{apitoken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"customerName\" : \"Jessie {{$randomLastName}}\",\n\"comment\" : \"ðŸ˜€!!!!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}/orders/:orderId",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete order Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{apitoken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base URL}}/orders/:orderId",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Registering a new API Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"clientName\": \"Postman\",\n   \"clientEmail\": \"vijeysurya0905197@gmai.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}/api-clients",
					"host": [
						"{{Base URL}}"
					],
					"path": [
						"api-clients"
					],
					"query": [
						{
							"key": "toolId",
							"value": "{{toolId}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}